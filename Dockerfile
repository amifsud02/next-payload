FROM node:18.8-alpine as base

FROM base as builder
WORKDIR /home/node/app

# Copy only package*.json files for efficient layer caching
COPY package*.json yarn.lock ./

RUN yarn install
COPY . .
RUN yarn build

FROM base as runtime
WORKDIR /home/node/app

ENV NODE_ENV=production
ENV PAYLOAD_CONFIG_PATH=dist/payload.config.js

# Add Environment Variables (use ARG for build-time flexibility)
ARG PORT
ENV PORT=${PORT}
ARG DATABASE_URI
ENV DATABASE_URI=${DATABASE_URI}
ARG PAYLOAD_SECRET
ENV PAYLOAD_SECRET=${PAYLOAD_SECRET}
ARG PAYLOAD_PUBLIC_SERVER_URL
ENV PAYLOAD_PUBLIC_SERVER_URL=${PAYLOAD_PUBLIC_SERVER_URL}
ARG PAYLOAD_PUBLIC_DRAFT_SECRET
ENV PAYLOAD_PUBLIC_DRAFT_SECRET=${PAYLOAD_PUBLIC_DRAFT_SECRET}
ARG REVALIDATION_KEY
ENV REVALIDATION_KEY=${REVALIDATION_KEY}
ARG PAYLOAD_PUBLIC_SEED
ENV PAYLOAD_PUBLIC_SEED=${PAYLOAD_PUBLIC_SEED}
ARG PAYLOAD_DROP_DATABASE
ENV PAYLOAD_DROP_DATABASE=${PAYLOAD_DROP_DATABASE}

# Next.js vars
ARG NEXT_PUBLIC_PAYLOAD_URL
ENV NEXT_PUBLIC_PAYLOAD_URL=${NEXT_PUBLIC_PAYLOAD_URL}
ARG NEXT_PUBLIC_SERVER_URL
ENV NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
ARG NEXT_PRIVATE_DRAFT_SECRET
ENV NEXT_PRIVATE_DRAFT_SECRET=${NEXT_PRIVATE_DRAFT_SECRET}
ARG NEXT_PRIVATE_REVALIDATION_KEY
ENV NEXT_PRIVATE_REVALIDATION_KEY=${NEXT_PRIVATE_REVALIDATION_KEY}

# S3 Bucket (or R2)
ARG R2_ENDPOINT
ENV R2_ENDPOINT=${R2_ENDPOINT}
ARG R2_ACCESS_KEY_ID
ENV R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
ARG R2_SECRET_ACCESS_KEY
ENV R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
ARG R2_BUCKET
ENV R2_BUCKET=${R2_BUCKET}
ARG R2_TOKEN
ENV R2_TOKEN=${R2_TOKEN}


# Install dependencies for production (avoid devDependencies)
COPY package*.json yarn.lock ./
RUN yarn install --production

# Copy built artifacts from the builder stage
COPY --from=builder /home/node/app/dist ./dist
COPY --from=builder /home/node/app/build ./build

EXPOSE 3000

CMD ["node", "dist/server.js"]
